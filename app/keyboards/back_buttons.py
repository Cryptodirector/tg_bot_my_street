from aiogram.exceptions import TelegramBadRequest
from aiogram import Router, types
from aiogram.utils.keyboard import InlineKeyboardBuilder
from app.keyboards.users import KeyboardsUsers
from app.query.users import Users

router = Router()

users = KeyboardsUsers()
users_query = Users()


class BackButtons:

    @staticmethod
    async def back_main_menu(callback: types.CallbackQuery):
        id_tg: int = callback.from_user.id
        area = await users_query.get_title_area_user(
            id_tg=id_tg
        )
        builder = InlineKeyboardBuilder()
        buttons = [
            types.InlineKeyboardButton(text='üë®‚Äçüíª –Ø –∑–∞–∫–∞–∑—á–∏–∫', callback_data='customer'),
            types.InlineKeyboardButton(text='üèÉ –Ø –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å', callback_data='executor'),
            types.InlineKeyboardButton(text='üèò –ü–æ–º–µ–Ω—è—Ç—å —Ä–∞–π–æ–Ω', callback_data='new_area'),
            types.InlineKeyboardButton(text='üîî –ü–æ–¥–¥–µ—Ä–∂–∫–∞', callback_data='support'),
            types.InlineKeyboardButton(text='‚ùóÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', callback_data='information'),
            types.InlineKeyboardButton(text='Ô∏è üìï –ü—Ä–∞–≤–∏–ª–∞', callback_data='rules'),
        ]
        builder.add(*buttons)
        builder.adjust(1)

        try:
            await callback.edit_text(
                f"<b><i>–í–∞—à —Ä–∞–π–æ–Ω: {area[0]['title']}</i></b>",
                reply_markup=builder.as_markup(),
                parse_mode='HTML'

            )
        except TelegramBadRequest:
            await callback.answer(
                f"<b><i>–í–∞—à —Ä–∞–π–æ–Ω: {area[0]['title']}</i></b>",
                reply_markup=builder.as_markup(),
                parse_mode='HTML'
            )
        except AttributeError:
            await callback.message.edit_text(
                f"<b><i>–í–∞—à —Ä–∞–π–æ–Ω: {area[0]['title']}</i></b>",
                reply_markup=builder.as_markup(),
                parse_mode='HTML'
            )
